# -*- coding: utf-8 -*-
"""pneumologista_joao_pacientes

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gXRuXD-zy21BcdVsXMuNUhXWMPsm2zQW
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report

try:
    df = pd.read_csv('pneumologista_joao_pacientes (1) (1).xlsx - pneumologista_joao_pacientes (1.csv')
except FileNotFoundError:
    dados = {
        'saturacao_oxigenio': [96.7, 95.8, np.nan, 97.8, 99.2, 94.1, 96.0, 95.5, 98.8, 97.1],
        'peso_kg': [70, 85, 60, np.nan, 75, 90, 68, 72, 80, 65],
        'altura_m': [1.75, 1.80, 1.65, 1.70, np.nan, 1.95, 1.78, 1.63, 1.85, 1.72],
        'sexo': ['Masculino', 'feminino', 'M', 'F', 'masculino', 'f', 'M', 'Feminino', 'Masculino', 'f'],
        'fumante': [1, 0, 1, 1, 0, 1, 0, 1, 0, 1],
        'historico_familiar': [0, 1, 0, 1, 0, 1, 1, 0, 1, 0],
        'risco_cancer_pulmao': ['Sem Risco', 'Com Risco', 'Sem Risco', 'Com Risco', 'Sem Risco', 'Com Risco', 'Sem Risco', 'Com Risco', 'Sem Risco', 'Com Risco'],
        'imc': [22.86, 26.23, 22.0, 31.6, 20.35, 23.67, 21.46, 28.01, 23.49, 21.94]
    }
    df = pd.DataFrame(dados)

df['saturacao_oxigenio'].fillna(df['saturacao_oxigenio'].median(), inplace=True)
df['peso_kg'].fillna(df['peso_kg'].median(), inplace=True)
df['altura_m'].fillna(df['altura_m'].median(), inplace=True)

df['sexo'] = df['sexo'].str.upper().str[0].replace({'M': 'Masculino', 'F': 'Feminino'})

df['imc'] = pd.to_numeric(df['imc'], errors='coerce')
df['imc'].fillna(df['peso_kg'] / (df['altura_m'] ** 2), inplace=True)

df['risco_cancer_pulmao'] = df['risco_cancer_pulmao'].replace({'Sem Risco': 0, 'Com Risco': 1})
df_ml = pd.get_dummies(df, columns=['sexo'], drop_first=True)

contagem_sexo = df['sexo'].value_counts()
plt.figure(figsize=(8, 6))
plt.bar(contagem_sexo.index, contagem_sexo.values, color=['skyblue', 'salmon'])
plt.title('Distribuição de Gênero')
plt.xlabel('Gênero')
plt.ylabel('Número de Pacientes')
plt.show()

contagem_risco = df.groupby('sexo')['risco_cancer_pulmao'].value_counts().unstack().fillna(0)
contagem_risco.plot(kind='bar', figsize=(10, 6))
plt.title('Risco de Câncer por Gênero')
plt.xlabel('Gênero')
plt.ylabel('Número de Pacientes')
plt.xticks(rotation=0)
plt.legend(['Sem Risco', 'Com Risco'])
plt.show()

df.groupby('risco_cancer_pulmao')['saturacao_oxigenio'].mean().plot(kind='line', marker='o')
plt.title('Saturação de Oxigênio Média por Risco de Câncer')
plt.xlabel('Risco de Câncer (0: Sem Risco, 1: Com Risco)')
plt.ylabel('Saturação de Oxigênio Média (%)')
plt.xticks([0, 1])
plt.grid(True)
plt.show()

media_imc = np.mean(df_ml['imc'])
desvio_padrao_imc = np.std(df_ml['imc'])

print(f"Média do IMC: {media_imc:.2f}")
print(f"Desvio Padrão do IMC: {desvio_padrao_imc:.2f}")

features = ['saturacao_oxigenio', 'peso_kg', 'altura_m', 'imc', 'sexo_Masculino']
target = 'risco_cancer_pulmao'

X = df_ml[features]
y = df_ml[target]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

modelo = DecisionTreeClassifier(random_state=42)
modelo.fit(X_train, y_train)

y_pred = modelo.predict(X_test)

acuracia = accuracy_score(y_test, y_pred)
relatorio = classification_report(y_test, y_pred)

print(f"Acurácia do modelo: {acuracia:.2f}")
print("Relatório de Classificação:\n", relatorio)